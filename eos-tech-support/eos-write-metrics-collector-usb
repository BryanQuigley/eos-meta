#!/bin/bash -e

# Detect the plugged in USB storage and prompt users
# that the contents of the storage will be erased
# and reformat the whole disk to a single FAT32
# partition.
# Then copy both eos-metrics-collector and the
# eos-metrics-uploader with .exe extension for
# the users to execute to collect offline metrics
# data.

USB_DISK_NUM=0
EOSMETRICS_LIBEXEC="/usr/share/libexec/eos-metrics"

prompt_input()
{
    echo "
         "
    read -p "Please enter the disk number you want to create for metrics? [] "
    response="${REPLY,,}" # to lower
    if [[ ! "$response" =~ ^[1-9]$ ]]; then
        echo " Please re-input your selection "
        prompt_input
    fi
    if [ $((response)) -gt $((USB_DISK_NUM)) ]; then
        echo " Please re-input your selection "
        prompt_input
    fi

    USER_CHOICE=$response
}

for device in /sys/block/*
do
    if udevadm info --query=property --path=$device | grep -q ^ID_BUS=usb
    then
        DISK[$USB_DISK_NUM]="/dev/${device##*/}"
        ((USB_DISK_NUM=USB_DISK_NUM+1))
        echo "$USB_DISK_NUM) / ${DISK[$((USB_DISK_NUM-1))]}"
        echo "`lsblk -o name,label /dev/${device##*/}`"
    fi
done

if [ $USB_DISK_NUM -eq 0 ]; then
    echo "Please plug in the USB storage device."
    exit 1
fi

prompt_input

TARGET_DISK=${DISK[$((USER_CHOICE-1))]}

echo "disk name $TARGET_DISK"
MOUNTPOINT=$(grep "$TARGET_DISK" /proc/mounts | cut -f2 -d' ' | tr '\n' ' ')
if [ ! -z "$MOUNTPOINT" ];
then
    umount $MOUNTPOINT
fi

TABLE=$(sfdisk -d "$TARGET_DISK")

HEADER=$(echo "$TABLE" | grep -v '^/')
# Remove the last-lba line so that we fill the disk
HEADER=$(echo "$HEADER" | sed -e '/^last-lba:/d')
LABEL_TYPE="$(echo "$TABLE" | grep "label: " | cut -f2 -d' ')"

# Add the basic data partition
if [ "$LABEL_TYPE" = "gpt" ]; then
    PARTS="start=2048, name=EOSMETRICS, type=EBD0A0A2-B9E5-4433-87C0-68B6B72699C7"
else
    PARTS="start=2048, type=c"
fi


# Reconstruct the table
TABLE="$HEADER
$PARTS"

echo "Writing the following partition table to disk"
echo "$TABLE"
echo "$TABLE" | sfdisk --quiet --force --wipe always "$TARGET_DISK"

# Give udisks a chance to notice the new partition
partprobe "$TARGET_DISK"
udevadm settle

# Read the path to the new partition
if [ "$LABEL_TYPE" = "gpt" ]; then
    PART=$(sfdisk -d "$TARGET_DISK" | grep 'EOSMETRICS' | cut -f1 -d' ')
else
    PART=$(sfdisk -d "$TARGET_DISK" | grep 'type=c' | cut -f1 -d' ')
fi

echo "Formatting the new partition $PART"
mkfs.vfat -n EOSMETRICS "$PART"
udevadm settle

echo "Trying to mount $PART"
if ! udisksctl mount -b "$PART" --no-user-interaction; then
    echo "Failed to mount FAT32 on $PART- exiting"
    exit 1
fi

# Read the path to the mountpoint
TARGET_MOUNTPOINT=$(grep "$PART" /proc/mounts | cut -f2 -d' ')

if test -n "$TARGET_MOUNTPOINT" -a -d "$TARGET_MOUNTPOINT" ; then
    echo "Populating the partition"
    cp -v $EOSMETRICS_LIBEXEC/metrics.py "$TARGET_MOUNTPOINT"
    cp -v $EOSMETRICS_LIBEXEC/eos-metrics-collector.exe "$TARGET_MOUNTPOINT"
    cp -v $EOSMETRICS_LIBEXEC/eos-metrics-uploader.exe "$TARGET_MOUNTPOINT"
fi

udisksctl unmount -b "$PART" --no-user-interaction
sync
echo "The USB device can now be removed and used to collect offline metrics"
