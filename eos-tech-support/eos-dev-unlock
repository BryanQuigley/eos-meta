#!/bin/bash -e

function warning_blob() {
    echo "This script uses \"ostree admin unlock\" to create a writable /usr"
    echo "overlay, and makes some other basic tweaks so that apt works in this"
    echo "setup. By default, the changes made to the overlay will be lost on"
    echo "reboot; passing --hotfix will make the changes persist across "
    echo "reboot, and clone the current deployment as the rollback deployment."
    echo ""
    echo "WARNING: If you're not an Endless developer you will not be able to"
    echo "meaningfully use apt."
    echo ""
}

if [[ $1 == "-h" ]] || [[ $1 == "--help" ]]; then
    echo "Usage:"
    echo "   $0 [--hotfix]"
    echo ""
    warning_blob
    exit 0
fi

warning_blob
read -p "Are you sure you want to proceed? [y/n] "
response="${REPLY,,}" # to lower
if [[ ! "$response" =~ ^(yes|y)$ ]]; then
    exit 1
fi

# Check that script was run with superuser privileges.
if [[ $EUID != 0 ]]; then
    echo "$0 requires superuser privileges."
    exit 1
fi

systemctl stop eos-autoupdater.timer
systemctl stop eos-autoupdater.service
systemctl stop eos-updater.service

ostree admin unlock "$@"

# Some tweaks to make apt work
if [ ! -d /var/cache/debconf ]; then
  OSTREE_DEPLOY_CURRENT=$(ostree admin --print-current-dir)
  cp -a $OSTREE_DEPLOY_CURRENT/var/cache/debconf /var/cache/
fi
